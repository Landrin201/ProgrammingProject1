#BlueJ class context
comment0.params=disp\ colorChooser
comment0.target=GridPlotter(GridPlotterGUI,\ edu.kzoo.grid.gui.nuggets.ColorChoiceMenu)
comment0.text=\ Constructs\ an\ object\ that\ could\ draw\ in\ a\ grid.\r\n\ \ \ \ \ \ @param\ disp\ \ \ \ an\ object\ that\ knows\ how\ to\ display\ a\ grid\r\n\ \ \ \ \ \ @param\ colorChooser\ \ a\ menu\ for\ choosing\ the\ color\ block\ color\r\n
comment1.params=grid
comment1.target=void\ reactToNewGrid(edu.kzoo.grid.Grid)
comment1.text=\ Sets\ the\ grid\ in\ which\ to\ draw.\r\n
comment10.params=
comment10.target=void\ onDrawXButtonClick()
comment10.text=\r\n\ \ \ \ \ \ \ This\ draws\ two\ intersecting\ diagonal\ lines\ in\ opposite\ directions\ to\ form\ an\ X\r\n\ \ \ \ \ \ \ on\ the\ grid.\r\n
comment11.params=
comment11.target=void\ onDrawSquareButtonClick()
comment12.params=
comment12.target=void\ onCakeButtonClick()
comment12.text=\r\n\ \ \ \ \ \ \ This\ method\ draws\ a\ cake.\ When\ drawing\ a\ cake\ it\ is\ best\ to\ use\ a\ square\ grid,\r\n\ \ \ \ \ \ \ or\ it\ looks\ really\ weird.\ But\ its\ your\ cake.\r\n\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ Use\ in\ conjunction\ with\ "candles"\ and\ "lies"\r\n
comment13.params=
comment13.target=void\ onCandlesButtonClick()
comment13.text=\r\n\ \ \ \ \ \ \ This\ works\ best\ in\ conjunction\ with\ the\ onCakeButtonClick()\ function.\ Best\ used\r\n\ \ \ \ \ \ \ on\ a\ square\ grid.\ It\ draws\ candles\ for\ the\ cake.\ I\ also\ recommend\ changing\ the\r\n\ \ \ \ \ \ \ color\ of\ the\ candles\ for\ the\ best\ looking\ results.\r\n
comment14.params=
comment14.target=void\ onLieButtonClick()
comment14.text=\r\n\ \ \ \ \ \ \ This\ draws\ a\ box\ around\ the\ grid\ and\ draws\ an\ x\ through\ the\ middle\ of\ it.\ \r\n\ \ \ \ \ \ \ It's\ supposed\ to\ sort\ of\ be\ like\ on\ of\ those\ "no\ ____"\ signs\ here,\ except\r\n\ \ \ \ \ \ \ with\ a\ full\ x\ instead\ of\ a\ slash.\ All\ of\ this\ needs\ to\ be\ a\ different\ color,\r\n\ \ \ \ \ \ \ so\ I\ made\ a\ modified\ placeColorBlock\ method\ to\ compensate\ for\ this\ and\ modified\r\n\ \ \ \ \ \ \ the\ code\ for\ the\ drawX\ and\ drawSquare\ functions\ within\ this\ method.\r\n
comment15.params=
comment15.target=void\ onSurpriseButtonClick()
comment15.text=\r\n\ \ \ \ \ \ \ This\ draws\ a\ cake\ and\ candles,\ waitd\ 4\ seconds,\ then\ shows\ it's\ true\ meaning.\r\n\ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ This\ was\ made\ to\ simplify\ things;\ I\ felt\ that\ there\ were\ too\ many\ buttons.\r\n
comment16.params=row\ column
comment16.target=void\ ensureEmpty(int,\ int)
comment16.text=\ Ensures\ that\ the\ specified\ location\ is\ empty\ by\ removing\ the\ object\r\n\ \ there,\ if\ there\ is\ one.\r\n\ \ \ \ \ \ @param\ row\ \ \ \ \ \ row\ number\ of\ location\ that\ should\ be\ empty\r\n\ \ \ \ \ \ @param\ column\ \ \ column\ number\ of\ location\ that\ should\ be\ empty\r\n
comment17.params=row\ column
comment17.target=void\ placeColorBlock(int,\ int)
comment17.text=\ Puts\ a\ color\ block\ in\ the\ specified\ location\ and\ redisplays\ the\ grid.\r\n\ \ \ \ \ \ @param\ row\ \ \ \ \ \ row\ in\ which\ to\ place\ the\ new\ color\ block\r\n\ \ \ \ \ \ @param\ column\ \ \ column\ in\ which\ to\ place\ the\ new\ color\ block\r\n
comment18.params=row\ column\ userColor
comment18.target=void\ placeSpecifiedColorBlock(int,\ int,\ java.awt.Color)
comment18.text=\ Puts\ a\ color\ block\ in\ the\ specified\ location\ and\ redisplays\ the\ grid.\r\n\ \ \ \ \ \ @param\ row\ \ \ \ \ \ row\ in\ which\ to\ place\ the\ new\ color\ block\r\n\ \ \ \ \ \ @param\ column\ \ \ column\ in\ which\ to\ place\ the\ new\ color\ block\r\n
comment2.params=
comment2.target=void\ onClearGridButtonClick()
comment2.text=\ \r\n\ \ \ \ \ \ \ Removes\ all\ objects\ from\ the\ grid.\r\n
comment3.params=
comment3.target=void\ onRowMajorFillButtonClick()
comment3.text=\ \r\n\ \ \ \ \ \ \ Fills\ in\ all\ the\ cells\ of\ the\ grid\ using\ a\ row-major\ traversal.\r\n
comment4.params=
comment4.target=void\ onReverseRowMajorFillButtonClick()
comment4.text=\r\n\ \ \ \ \ \ \ Fills\ in\ all\ of\ the\ cells\ on\ the\ grid\ by\ row\ starting\ in\ the\ bottom\ right\ corner.\r\n
comment5.params=
comment5.target=void\ onColMajorFillButtonClick()
comment5.text=\ \r\n\ \ \ \ \ \ \ Fills\ in\ all\ the\ cells\ of\ the\ grid\ using\ a\ column-major\ traversal.\r\n
comment6.params=
comment6.target=void\ onReversColMajorFillButtonClick()
comment6.text=\ \r\n\ \ \ \ \ \ \ Fills\ in\ all\ the\ cells\ of\ the\ grid\ using\ a\ column-major\ traversal.\r\n
comment7.params=
comment7.target=void\ onDiagonalButtonClick()
comment7.text=\r\n\ \ \ \ \ \ \ Creates\ a\ diagonal\ line\ across\ the\ grid\ starting\ in\ the\ top\ left\ corner,\r\n\ \ \ \ \ \ \ (0,0).\ The\ diagonal\ line\ will\ always\ start\ there,\ regardless\ of\ the\ size\r\n\ \ \ \ \ \ \ of\ the\ grid.\ \r\n
comment8.params=
comment8.target=void\ onReverseDiagonalButtonClick()
comment8.text=\r\n\ \ \ \ \ \ \ Creates\ a\ diagonal\ line\ starting\ at\ the\ top\ right\ corner.\ The\ line\ is\ drawn\ from\r\n\ \ \ \ \ \ \ right\ to\ left,\ exactly\ the\ opposite\ of\ the\ onDiagonalButtonClick\ method.\r\n
comment9.params=
comment9.target=void\ onTriangleButtonClick()
comment9.text=\r\n\ \ \ \ \ \ \ Draws\ a\ triangle\ when\ the\ button\ is\ clicked.\ The\ triangle\ is\ only\ a\ triangle\r\n\ \ \ \ \ \ \ if\ the\ grid\ is\ a\ square,\ otherwise\ it\ turns\ into\ a\ weirdly\ shaped\ object.\ This\r\n\ \ \ \ \ \ \ is\ essentially\ a\ diagonal\ line\ where\ all\ of\ the\ squares\ below\ it\ are\ filled\ in.\r\n
numComments=19
