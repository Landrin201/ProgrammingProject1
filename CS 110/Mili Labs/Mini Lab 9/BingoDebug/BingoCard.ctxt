#BlueJ class context
comment0.params=max_value
comment0.target=BingoCard(int)
comment0.text=\ Constructs\ a\ new\ BingoCard\ object\ containing\ numbers\ in\r\n\ \ the\ range\ of\ 1\ --\ max_value.\r\n
comment1.params=
comment1.target=void\ initialize()
comment1.text=\ Set\ up\ (or\ reset)\ the\ card\ with\ column\ headings\r\n\ \ and\ random\ Bingo\ values.\r\n
comment10.params=
comment10.target=void\ indicateCardWon()
comment10.text=\ Indicates\ this\ card\ won\ by\ setting\ the\ column\ headings\ to\ the\r\n\ \ highlight\ color\ used\ to\ mark\ numbers.\ \ Assumes\ that\ the\ highlight\r\n\ \ color\ is\ different\ from\ the\ initial\ column\ heading\ color.\r\n
comment2.params=col\ min\ max
comment2.target=void\ initCol(int,\ int,\ int)
comment2.text=\ Initializes\ the\ cells\ in\ the\ given\ column\ with\ numbers\ from\r\n\ \ the\ given\ range.\r\n\ \ \ \ @param\ col\ \ which\ column\ to\ initialize\r\n\ \ \ \ @param\ min\ \ smallest\ valid\ number\ to\ appear\ this\ column\r\n\ \ \ \ @param\ max\ \ largest\ valid\ number\ to\ appear\ in\ this\ column\r\n
comment3.params=row\ col
comment3.target=boolean\ isEmpty(int,\ int)
comment3.text=\ Returns\ <code>true</code>\ if\ the\ the\ given\ (row,\ col)\ location\r\n\ \ \ \ \ \ \ \ \ \ is\ empty;\ <code>false</code>\ otherwise.\r\n
comment4.params=min\ max
comment4.target=int\ getUnusedRandomNum(int,\ int)
comment4.text=\ Returns\ a\ random\ number\ in\ the\ range\ of\ min\ --\ max\ (inclusive)\r\n\ \ that\ has\ not\ been\ returned\ before\ in\ this\ program\ run.\r\n\ \ (Precondition\:\ there\ must\ be\ at\ least\ one\ value\ in\r\n\ \ the\ range\ that\ has\ not\ been\ previously\ returned.)\r\n
comment5.params=min\ max
comment5.target=int\ getRandomValue(int,\ int)
comment5.text=\ Returns\ a\ random\ value\ in\ the\ range\ of\ min\ --\ max\ (inclusive).\r\n
comment6.params=cell\ row\ col
comment6.target=void\ addCell(BingoValueCell,\ int,\ int)
comment6.text=\ Adds\ the\ given\ Bingo\ value\ cell\ to\ this\ bingo\r\n\ \ card\ at\ the\ given\ (row,\ col)\ location.\r\n
comment7.params=numToPlay
comment7.target=void\ playNumber(int)
comment7.text=\ If\ this\ bingo\ card\ contains\ numToPlay,\ marks\ it\ as\ found.\r\n\ \ \ \ @param\ numToPlay\ \ the\ number\ to\ play\ (mark\ if\ found)\r\n
comment8.params=value
comment8.target=BingoValueCell\ findCellContaining(int)
comment8.text=\ Returns\ the\ cell\ containing\ the\ given\ value,\ or\ <code>null</code>\r\n\ \ \ \ \ \ \ \ \ \ if\ this\ bingo\ card\ does\ not\ contain\ the\ given\ value.\r\n\ \ \ \ \ \ \ \ \ \ (Precondition\:\ all\ cells\ have\ been\ filled.)\r\n
comment9.params=row\ col
comment9.target=BingoValueCell\ getCellAt(int,\ int)
comment9.text=\ Returns\ the\ cell\ at\ the\ given\ (row,\ col)\ location,\ or\r\n\ \ \ \ \ \ \ \ \ \ <code>null</code>\ if\ there\ is\ no\ Bingo\ value\ cell\ there.\r\n
numComments=11
