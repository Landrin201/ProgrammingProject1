#BlueJ class context
comment0.params=controllerClass
comment0.target=PercolationController\ newController(java.lang.Class)
comment0.text=Instantiates\ a\ new\ controller.
comment1.params=c\ type
comment1.target=java.lang.Object\ newObject(java.lang.Class,\ java.lang.String)
comment1.text=Instantiates\ a\ new\ object.
comment10.params=classList\ prefix
comment10.target=javax.swing.JComboBox\ makeClassChoiceComponent(java.lang.Class[],\ java.lang.String)
comment10.text=\ Makes\ the\ controller\ type\ choice\ combo\ box.\r\n
comment11.params=
comment11.target=void\ chooseControllerType()
comment11.text=\ Follows\ up\ when\ the\ user\ picks\ a\ new\ choice\ from\ the\r\n\ \ grid\ object\ combo\ box\ (specified\ listener\ action).\r\n
comment12.params=
comment12.target=java.lang.Class\ currentControllerClass()
comment12.text=\ Returns\ the\ currently\ selected\ controller\ class.\r\n
comment13.params=controller
comment13.target=void\ setController(PercolationController)
comment13.text=\ Sets\ the\ controller\ being\ used\ to\ control\ the\ application.\r\n\ \ (Precondition\:\ controller\ is\ not\ null.)\r\n\ \ \ \ @param\ controller\ the\ new\ PercolationController\ to\ use\r\n
comment14.params=
comment14.target=java.lang.Class\ getCurrentPercType()
comment14.text=\ Returns\ the\ currently\ selected\ percolating\ type.\r\n
comment15.params=grid
comment15.target=void\ setGrid(edu.kzoo.grid.Grid)
comment15.text=\ Sets\ the\ Grid\ being\ displayed.\r\n\ \ (Precondition\:\ grid\ is\ not\ null.)\r\n\ \ \ \ @param\ grid\ the\ Grid\ to\ display\r\n
comment16.params=
comment16.target=void\ invokeEditor()
comment16.text=\ Invokes\ the\ percolation\ editor\ for\ placing\ solid\ cells\ and\ percolating\r\n\ \ material.\r\n
comment17.params=
comment17.target=void\ randomlyFillGrid()
comment17.text=\ Populates\ the\ grid\ with\ random\ solid\ cells\ based\ on\ a\r\n\ \ \ \ porousness/density\ factor.\r\n
comment18.params=
comment18.target=int\ promptUserForDensity()
comment18.text=\ Runs\ a\ dialog\ asking\ the\ user\ to\ input\ a\ density\ percentage\r\n\ \ for\ the\ material\ through\ which\ to\ percolate.\ If\ successful,\r\n\ \ updates\ density\ and\ returns\ it,\ else\ returns\ a\ negative\ number.\r\n
comment19.params=prompt\ clarification\ minValue\ maxValue\ suggestedValue
comment19.target=int\ promptUserForValueInRange(java.lang.String,\ java.lang.String,\ int,\ int,\ int)
comment19.text=\ Runs\ a\ dialog\ asking\ the\ user\ to\ input\ a\ desired\ integer\ value\r\n\ \ in\ a\ given\ range.\ \ (Precondition\:\ minValue\ must\ be\ greater\ than\r\n\ \ <code>Integer.MIN_VALUE</code>.)\r\n\ \ \ \ @param\ prompt\ \ \ \ \ \ \ \ \ \ the\ prompt\ for\ the\ desired\ value\r\n\ \ \ \ @param\ clarification\ \ \ a\ string\ that\ describes\ a\ valid\ value\r\n\ \ \ \ @param\ minValue\ \ \ \ \ \ \ \ the\ minimum\ valid\ value\r\n\ \ \ \ @param\ maxValue\ \ \ \ \ \ \ \ the\ maximum\ valid\ value\ (not\ checked\ if\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ maxValue\ if\ less\ than\ or\ equal\ to\ minValue)\r\n\ \ \ \ @param\ suggestedValue\ \ a\ suggested\ valid\ value\ that\ will\ serve\ as\ a\ default\r\n\ \ \ \ @return\ \ \ \ the\ user-provided\ value\ if\ a\ valid\ value\ is\ provided;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>Integer.MIN_VALUE</code>\ otherwise\r\n
comment2.params=controllers\ percTypes
comment2.target=PercolationGUI(java.lang.Class[],\ java.lang.Class[])
comment2.text=\ Creates\ a\ window\ in\ which\ to\ run\ an\ obstacle\ race.\r\n\ \ \ \ @param\ controllers\ \ non-empty\ array\ of\ controller\ classes\ that\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ should\ be\ made\ available\ to\ the\ user\r\n\ \ \ \ @param\ percTypes\ \ \ \ non-empty\ array\ of\ percolation\ type\ classes\ that\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ should\ be\ made\ available\ to\ the\ user\r\n
comment20.params=
comment20.target=void\ nRuns()
comment20.text=Run\ percolation\ simulation\ N\ times\ with\ the\ current\ density.
comment21.params=prompt
comment21.target=int\ promptUserForRunCount(java.lang.String)
comment21.text=\ Runs\ a\ dialog\ asking\ the\ user\ to\ input\ a\ density\ percentage\r\n\ \ for\ the\ material\ through\ which\ to\ percolate.\ If\ successful,\r\n\ \ updates\ density\ and\ returns\ it,\ else\ returns\ a\ negative\ number.\r\n\ \ \ \ @param\ prompt\ \ the\ prompt\ to\ use\r\n
comment22.params=
comment22.target=void\ runDensityExperiments()
comment22.text=Run\ density\ experiments.
comment23.params=
comment23.target=void\ runCustomizedDensityExperiments()
comment23.text=Run\ density\ experiments.
comment3.params=e
comment3.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.params=
comment4.target=void\ act()
comment5.params=
comment5.target=void\ act()
comment6.params=
comment6.target=void\ act()
comment7.params=
comment7.target=void\ act()
comment8.params=
comment8.target=void\ act()
comment9.params=title\ viewingWidth\ viewingHeight\ minCellSize
comment9.target=void\ constructWindowContents(java.lang.String,\ int,\ int,\ int)
comment9.text=Inherit\ description\ from\ GridAppFrame.
numComments=24
