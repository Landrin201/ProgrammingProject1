import java.util.ArrayList;

/*
 * Author: Marc Kuniansky
 * Date Created: June 18, 2015
 * Modifications:
 * 			Date			Author			Reason
 * 		August 14 2015, Marc Kuniansky	Refactored main method here.
 * 		August 20 2015, Marc Kuniansky, Added two new instance variables, inclFile2 and inclFile 3, as well 
 * 										as two new public methods used to set these values to true. This 
 * 										allows the user to select which optional files they wish to include in 
 * 										application.ini. Modified method execute to work with the UI.
 */

/**
 * Does most of the work in creating, writing to, and initializing application.ini
 * @author Marc
 */
public class Initializer 
{ //Begin class
	//Instance Variables
	//Validated Input Reader
	public ValidatedInputReader inputReader;
	//Need the extension to be used
	private String extension;
	//Need to get all of the files that will be needed
	private InputFileReader RampBasics;
	private InputFileReader RampDefaults;
	private InputFileReader RampDemo;
	//Need a file to write everything to
	private FileCreator Applicationini;
	//Booleans for including files
	private Boolean inclFile2;
	private Boolean inclFile3;
	//Construct the GUI that will be used to accept user input.
	private GUI theGUI;
	
	//Constructor
	/**
	 * Constructor with one variable
	 * 
	 * @param desiredLocationOfAppini is a full file location at which 'application.ini' will be saved.
	 */
	public Initializer(String desiredLocationOfAppini, GUI GUI)
	{ //Begin constructor
		inputReader = new ValidatedInputReader();
		extension = System.getProperty("user.dir");
		RampBasics = new InputFileReader("ramp_basics.ini", extension);
		RampDefaults = new InputFileReader("ramp_defaults.ini", extension);
		RampDemo = new InputFileReader("ramp_demo.ini", extension);
		Applicationini = new FileCreator(desiredLocationOfAppini, "application.ini");
		
		//File 1 must be included. Files 2 and 3 are optional.
		inclFile2=false;
		inclFile3=false;
		
		theGUI = GUI;
		
		Debug.println("Constructed Initializer");
	} //End constructor
	
	//Methods 

	/**
	 * Executing this method includes file 2 in application.ini
	 */
	public void IncludeFileTwo()
	{
		inclFile2 = true;
	}
	
	/**
	 * Executing this method includes file 3 in application.ini
	 */
	public void IncludeFileThree()
	{
		inclFile3 = true;
	}
	
	
	public void execute()
	{ //Begin Execute
		//Print out the file location being used
		System.out.println(System.getProperty("user.dir"));
		
		//Make an array list which will contain the lines of all files to
		//be included
		ArrayList<String> linesToAdd = new ArrayList<String>();
		
		//Start with file 1, as it must be present for Ramp to work
		//Set the lines of file 1 to an array list
		ArrayList<String> file1Lines = RampBasics.LinestoArray();
		//Add the lines of file 1 to the new file
		for(String s: file1Lines)
			linesToAdd.add(s);
		
		//Now show the GUI for file selection, and let the user select which files to include.
		theGUI.FileSelectorGUI(this);
		//Now for file 2, if the user wants it included
		if(inclFile2 == true)
		{ //Begin file 2
			//Make the lines of file 2 into an array list
			ArrayList<String> file2Lines = RampDefaults.LinestoArray();
			//Add the array list of file 2's lines to the new file
			for(String s: file2Lines)
				linesToAdd.add(s);
		} //End file 2
		
		//Now do file 3, if it is to be included
		if(inclFile3)
		{ //Begin for file 3
			//Make the lines of file 3 an array list
			ArrayList<String> file3Lines = RampDemo.LinestoArray();
			//Add the lines of file 3 to the new file
			for(String s: file3Lines)
				linesToAdd.add(s);
		} //End for file 3
		
		//Write the new array list to a file.
		Applicationini.writeToFile(linesToAdd);
		
	} //End Execute
} //End class
